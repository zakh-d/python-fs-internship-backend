# How to run:
#
#    pip install ruff
#    ruff check --fix # to check for issues
#    ruff format      # to format the code
#

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "tests",
]

line-length = 120
indent-width = 4

# Python 3.9 is the minimal python that most distros we use support
target-version = "py39"

[lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-bandit
    "S",
    # flake8-simplify
    "SIM",
    # flake8-logging-format
    "G",
    # flake8-annotations
    "ANN",
    # isort
    "I",
    # flake8-datetimez
    "DTZ",
    # Ruff-specific rules
    "RUF",
]
ignore = [
    # Allow specify explicit mode in `open`
    "UP015",

    # It is not C, we allow Yoda expression as they are sometimes useful
    # (if 0.0 < x and x < 10.0)
    "SIM300",
    "ANN101", # annotation for self
    "ANN102", # annotation for cls
    "ANN204", # missing return tupe from __init__
    "B904", # raise ... from err 
    "ANN401", # any is disallowed
    "ANN002", # type annotation for *args
    "ANN003", # type annotation for **kwargs

]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[lint.per-file-ignores]
"test_*.py" = [
    # Ignore in tests
]

[lint.flake8-quotes]
inline-quotes = "single"
multiline-quotes = "single"

[format]
quote-style = "single"

# Indent with spaces, rather than tabs.
indent-style = "space"

# Respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
docstring-code-line-length = "dynamic"